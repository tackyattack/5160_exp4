C51 COMPILER V6.02  PRINT_BYTES                                                            11/08/2019 22:45:15 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE PRINT_BYTES
OBJECT MODULE PLACED IN .\print_bytes.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE \\psf\Home\Documents\COLLEGE\2019\FALL SEMESTER\CpE 5160\experiments\exp4\s
                    -ource\print_bytes.c DEBUG OBJECTEXTEND PRINT(.\print_bytes.lst) OBJECT(.\print_bytes.obj) 

stmt level    source

   1          #include <stdio.h>
   2          #include "main.h"
   3          #include "print_bytes.h"
   4          #include "UART.h"
   5          
   6          
   7          
   8          
   9          
  10          /***********************************************************************
  11          DESC:    Prints 8 bytes in Hexadecimal and then ASCII
  12          INPUT: Pointer to an array of eight bytes
  13          RETURNS: nothing
  14          CAUTION: 
  15          ************************************************************************/
  16          void print_16bytes(uint8_t * array_in_p)
  17          {
  18   1         uint8_t * input_p;
  19   1         uint8_t index, dat;
  20   1         input_p = array_in_p;
  21   1         printf("%p ",input_p);
  22   1         for (index=0;index<16;index++)
  23   1         {
  24   2            dat=*(input_p+index);
  25   2            printf("%2.2bX ",dat);
  26   2         }
  27   1         for (index=0;index<16;index++)
  28   1         { 
  29   2            dat=*(input_p+index);
  30   2            if (dat<32 || dat>127) dat=46;
  31   2            UART_Transmit(dat);
  32   2         }
  33   1         UART_Transmit(CR);
  34   1         UART_Transmit(LF);
  35   1      }
  36          
  37          
  38          /***********************************************************************
  39          DESC: Prints an array from memory in Hexadecimal and then ASCII
  40          INPUT: Pointer to an array, number of bytes to print
  41          RETURNS: nothing
  42          CAUTION: 
  43          ************************************************************************/
  44          void print_memory(uint8_t * array_in_p, uint16_t number_of_bytes)
  45          {
  46   1         uint8_t * input_p;
  47   1         uint16_t i;
  48   1         input_p = array_in_p;
  49   1         i = (uint16_t) input_p;
  50   1         i &= 0x000f;
  51   1         input_p = input_p - i;
  52   1         printf("Addr.   0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F\n\r");
  53   1         do
  54   1         {
C51 COMPILER V6.02  PRINT_BYTES                                                            11/08/2019 22:45:15 PAGE 2   

  55   2            print_16bytes(input_p);
  56   2            input_p+=16;
  57   2         }while(input_p<(array_in_p+number_of_bytes));
  58   1      }
  59          		


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    215    ----
   CONSTANT SIZE    =     69    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
