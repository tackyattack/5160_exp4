C51 COMPILER V6.02  EXP_4_MAIN                                                             11/08/2019 22:45:13 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE EXP_4_MAIN
OBJECT MODULE PLACED IN .\exp_4_main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\exp_4_main.c DEBUG OBJECTEXTEND PRINT(.\exp_4_main.lst) OBJECT(.\
                    -exp_4_main.obj) 

stmt level    source

   1          #include <stdio.h>
   2          #include "main.h"
   3          #include "PORT.H"
   4          #include "Directory_Functions_struct.h"
   5          #include "file_system.h"
   6          #include "LED_Control.h"
   7          #include "SPI.h"
   8          #include "SDCard.h"
   9          #include "print_bytes.h"
  10          #include "Timer0_hardware_delay_1ms.h"
  11          #include "UART.h"
  12          #include "LCD_Routines.h"
  13          #include "Long_Serial_In.h"
  14          #include "Outputs.h"
  15          
  16          xdata uint8_t buf1[512];
  17          uint8_t code LCD_str_start[]="Starting...";
  18          
  19          main()
  20          {
  21   1         uint8_t error_flag;
  22   1         uint32_t entry_num, cwd_entries;
  23   1         uint32_t cwd, clus;
  24   1      
  25   1         AUXR=0x0c;   // make all of XRAM available, ALE always on
  26   1         if(OSC_PER_INST==6)
  27   1         {
  28   2             CKCON0=0x01;  // set X2 clock mode
  29   2         }
  30   1         else if(OSC_PER_INST==12)
  31   1         {
  32   2             CKCON0=0x00;  // set standard clock mode
  33   2         }
  34   1      
  35   1         LEDS_ON(Red_LED);
  36   1         P2_set_bit(0x0F);
  37   1      
  38   1         Timer0_DELAY_1ms(300);
  39   1         uart_init(9600);
  40   1      
  41   1         LCD_Init();
  42   1         LCD_Print(0x00, sizeof(LCD_str_start)-1, LCD_str_start);
  43   1         printf("starting program...\n");
  44   1      
  45   1         // My SD card won't init at 400kHz, so using 200kHz
  46   1         error_flag=SPI_Master_Init(200000UL);
  47   1         if(error_flag!=no_errors)
  48   1         {
  49   2            LEDS_ON(Red_LED);  // An error causes the program to stop
  50   2      	    UART_Transmit('S');
  51   2            while(1);
  52   2         }
  53   1         LEDS_ON(Amber_LED);
  54   1         // SD Card Initialization
C51 COMPILER V6.02  EXP_4_MAIN                                                             11/08/2019 22:45:13 PAGE 2   

  55   1         error_flag=SD_card_init();
  56   1         if(error_flag!=no_errors)
  57   1         {
  58   2            LEDS_ON(Red_LED);  // An error causes the program to stop
  59   2      	  UART_Transmit('C');
  60   2            while(1);
  61   2         }
  62   1         LEDS_OFF(Amber_LED);
  63   1         error_flag=SPI_Master_Init(20000000UL);
  64   1         if(error_flag!=no_errors)
  65   1         {
  66   2            LEDS_ON(Red_LED);  // An error causes the program to stop
  67   2      	    UART_Transmit('P');
  68   2            while(1);
  69   2         }
  70   1      
  71   1         printf("Mounting SD card\n");
  72   1         if(mount_drive(buf1) == MOUNT_SUCCESS)
  73   1         {
  74   2           printf("SD card mounted\n");
  75   2           LEDS_OFF(Red_LED);
  76   2           LEDS_ON(Green_LED);
  77   2         }
  78   1         else
  79   1         {
  80   2           printf("SD card failed to mount\n");
  81   2           while(1);
  82   2         }
  83   1      
  84   1         printf("Root directory:\n\n");
  85   1         cwd = Export_Drive_values()->FirstRootDirSec; // start out at root directory
  86   1      
  87   1         while(1)
  88   1         {
  89   2           cwd_entries = Print_Directory(cwd, buf1);
  90   2           printf("Enter an entry number: \n");
  91   2           entry_num = long_serial_input();
  92   2           printf("%lu  ", entry_num);
  93   2           printf("%lu  \n", cwd);
  94   2           // check to make sure entry is within the cwd
  95   2           if(entry_num <= cwd_entries)
  96   2           {
  97   3             clus = Read_Dir_Entry(cwd, entry_num, buf1);
  98   3             if(clus & directory_bit)
  99   3             {
 100   4               clus &= 0x0FFFFFFF; // mask off upper four bits to print another directory
 101   4               cwd = first_sector(clus);
 102   4             }
 103   3             else
 104   3             {
 105   4               print_file(clus, buf1);
 106   4             }
 107   3           }
 108   2           else
 109   2           {
 110   3             printf("Error: invalid entry choice\n");
 111   3           }
 112   2         }
 113   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V6.02  EXP_4_MAIN                                                             11/08/2019 22:45:13 PAGE 3   

   CODE SIZE        =    438    ----
   CONSTANT SIZE    =    178    ----
   XDATA SIZE       =    512    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
