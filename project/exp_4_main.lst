C51 COMPILER V6.02  EXP_4_MAIN                                                             11/08/2019 17:19:47 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE EXP_4_MAIN
OBJECT MODULE PLACED IN .\exp_4_main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\exp_4_main.c DEBUG OBJECTEXTEND PRINT(.\exp_4_main.lst) OBJECT(.\
                    -exp_4_main.obj) 

stmt level    source

   1          #include <stdio.h>
   2          #include "main.h"
   3          #include "PORT.H"
   4          #include "Directory_Functions_struct.h"
   5          #include "file_system.h"
   6          #include "LED_Control.h"
   7          #include "SPI.h"
   8          #include "SDCard.h"
   9          #include "print_bytes.h"
  10          #include "Timer0_hardware_delay_1ms.h"
  11          #include "UART.h"
  12          #include "LCD_Routines.h"
  13          #include "Long_Serial_In.h"
  14          
  15          xdata uint8_t buf1[512];
  16          uint8_t code LCD_str_start[]="Starting...";
  17          
  18          main()
  19          {
  20   1         uint8_t error_flag;
  21   1         uint16_t entry_num;
  22   1         uint32_t cwd, clus;
  23   1      
  24   1         LEDS_ON(Red_LED);
  25   1         AUXR=0x0c;   // make all of XRAM available, ALE always on
  26   1         if(OSC_PER_INST==6)
  27   1         {
  28   2             CKCON0=0x01;  // set X2 clock mode
  29   2         }
  30   1         else if(OSC_PER_INST==12)
  31   1         {
  32   2             CKCON0=0x00;  // set standard clock mode
  33   2         }
  34   1         Timer0_DELAY_1ms(300);
  35   1         uart_init(9600);
  36   1      
  37   1      
  38   1         LCD_Init();
  39   1         LCD_Print(0x00, sizeof(LCD_str_start)-1, LCD_str_start);
  40   1      
  41   1         error_flag=SPI_Master_Init(400000UL);
  42   1         if(error_flag!=no_errors)
  43   1         {
  44   2            LEDS_ON(Red_LED);  // An error causes the program to stop
  45   2      	  UART_Transmit('S');
  46   2            while(1);
  47   2         }
  48   1         LEDS_ON(Amber_LED);
  49   1         // SD Card Initialization
  50   1         error_flag=SD_card_init();
  51   1         if(error_flag!=no_errors)
  52   1         {
  53   2            LEDS_ON(Red_LED);  // An error causes the program to stop
  54   2      	  UART_Transmit('C');
C51 COMPILER V6.02  EXP_4_MAIN                                                             11/08/2019 17:19:47 PAGE 2   

  55   2            while(1);
  56   2         }
  57   1         LEDS_OFF(Amber_LED);
  58   1         error_flag=SPI_Master_Init(20000000UL);
  59   1         if(error_flag!=no_errors)
  60   1         {
  61   2            LEDS_ON(Red_LED);  // An error causes the program to stop
  62   2      	    UART_Transmit('P');
  63   2            while(1);
  64   2         }
  65   1      
  66   1         printf("Mounting SD card\n");
  67   1         if(mount_drive(buf1) == MOUNT_SUCCESS)
  68   1         {
  69   2           printf("SD card mounted\n");
  70   2         }
  71   1         else
  72   1         {
  73   2           printf("SD card failed to mount\n");
  74   2           while(1);
  75   2         }
  76   1      
  77   1         printf("Root directory:\n\n");
  78   1         cwd = Print_Directory(Export_Drive_values()->FirstRootDirSec, buf1);
  79   1      
  80   1      
  81   1         while(1)
  82   1         {
  83   2           printf("Enter an entry number: ");
  84   2           entry_num = (uint16_t)long_serial_input();
  85   2           // check to make sure entry is within the cwd
  86   2           if(entry_num <= Print_Directory(cwd, buf1))
  87   2           {
  88   3             clus = Read_Dir_Entry(cwd, entry_num, buf1);
  89   3             if(clus & directory_bit)
  90   3             {
  91   4               clus &= 0x0FFFFFFF; // mask off upper four bits to print another directory
  92   4               cwd = first_sector(clus);
  93   4             }
  94   3             else
  95   3             {
  96   4               print_file(clus, buf1);
  97   4             }
  98   3           }
  99   2           else
 100   2           {
 101   3             printf("Error: invalid entry choice\n");
 102   3           }
 103   2         }
 104   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    361    ----
   CONSTANT SIZE    =    143    ----
   XDATA SIZE       =    512    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
