C51 COMPILER V6.02  SECTOR_READER                                                          11/08/2019 17:19:48 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE SECTOR_READER
OBJECT MODULE PLACED IN .\sector_reader.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\sector_reader.c DEBUG OBJECTEXTEND PRINT(.\sector_reader.lst) OBJ
                    -ECT(.\sector_reader.obj) 

stmt level    source

   1          #include "main.h"
   2          #include "SDCard.h"
   3          #include "PORT.h"
   4          #include "sector_reader.h"
   5          
   6          uint8_t Read_Sector(uint32_t sector_number, uint16_t sector_size, uint8_t *data_array)
   7          {
   8   1        uint8_t SD_type, error_flag;
   9   1        SD_type = Return_SD_Card_Type();
  10   1        nCS0=0;
  11   1        error_flag = SEND_COMMAND(17, (sector_number<<SD_type));
  12   1        if(error_flag == no_errors) read_block(sector_size, data_array);
  13   1        nCS0=1;
  14   1      
  15   1        if(error_flag != no_errors) return SECTOR_READ_FAIL;
  16   1        return SECTOR_READ_SUCCESS;
  17   1      }
  18          
  19          // Reads single byte
  20          uint8_t read8(uint16_t offset, uint8_t *data_array)
  21          {
  22   1        offset = offset & 0x1FF; // mask off for safety
  23   1        return data_array[offset];
  24   1      }
  25          
  26          // Reads little endian 16b value
  27          uint16_t read16(uint16_t offset, uint8_t *data_array)
  28          {
  29   1        uint16_t ret_val;
  30   1        offset = offset & 0x1FF; // mask off for safety
  31   1        ret_val = 0;
  32   1        ret_val = data_array[offset + 1];              // MSB
  33   1        ret_val = ret_val << 8;                     // shift to correct spot
  34   1        ret_val = ret_val | data_array[offset];        // LSB
  35   1        return ret_val;
  36   1      }
  37          
  38          // Reads little endian 32b value
  39          uint32_t read32(uint16_t offset, uint8_t *data_array)
  40          {
  41   1        uint32_t ret_val;
  42   1        uint8_t temp, i;
  43   1        offset = offset & 0x1FF; // mask off for safety
  44   1        ret_val = 0;
  45   1        for(i=0; i<4; i++)
  46   1        {
  47   2          temp = data_array[offset + (3-i)];
  48   2          ret_val = ret_val<<8;
  49   2          ret_val |= temp;
  50   2        }
  51   1        return ret_val;
  52   1      }


C51 COMPILER V6.02  SECTOR_READER                                                          11/08/2019 17:19:48 PAGE 2   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    235    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
